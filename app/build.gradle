plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {

    viewBinding{
        enabled = true
    }

    namespace 'com.example.chatbrainy'
    compileSdk 32

    defaultConfig {
        applicationId "com.example.chatbrainy"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "API_KEY", "\"${properties.getProperty("API_KEY")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    // Coroutines to make the HTTP requests asynchronous(In the background thread)
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // Okhttp3 for the POST requests
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'


    // Gson (To convert raw JSON to pretty JSON)
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


}